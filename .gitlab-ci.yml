# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.8

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  SAST_EXCLUDED_PATHS: "spec, test, tests, tmp, venv, _build"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv || echo "ignore venv error"
  - source venv/bin/activate

pages:
  script:
    - pip install --upgrade pip setuptools wheel
    - pip install -r backend/requirements.txt
    - cd backend/documentation ; make html
    - mkdir ../../public
    - mkdir ../../public/backend_doc; mkdir ../../public/frontend_doc
    - cp -rf _build/html/* ../../public/backend_doc
    - cp -rf ../../frontend/OpenLakeWEB/documentation/* ../../public/frontend_doc
    - cp -rf ../../Index/* ../../public

  artifacts:
    paths:
      - public
  #rules:
   # - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH


#Security
include:
  - template: Security/SAST.gitlab-ci.yml

bandit-sast:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
     
eslint-sast:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
     
nodejs-scan-sast:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
     
semgrep-sast:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
     

