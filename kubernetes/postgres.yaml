apiVersion: v1
kind: Service
metadata:
  name: svc-openlake-backend
  namespace: test2
spec:
  type: NodePort
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: openlake-backend
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap-postgresql-config-file
  namespace: test2
data:
  postgresql.conf: |
    listen_addresses = '*'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-openlake-backend
  namespace: test2
  labels:
    app: openlake-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openlake-backend
  template:
    metadata:
      labels:
        app: openlake-backend
    spec:
      imagePullSecrets:
      - name: regcred
      containers:
      - name: openlake-backend
        image: postgres:latest
        ports:
        - containerPort: 5432
        resources:
          requests:
            memory: "256Mi" #256Mi
            cpu: "100m"
          limits:
            memory: "2048Mi" #1024Mi
            cpu: "2000m"
        env:
          - name: POSTGRES_USER
            value: openlake
          - name: POSTGRES_PASSWORD
            value: openlake
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_DB
            value: openlake
        volumeMounts: # Step 3: Mounting voulume obtained from Persistent Volume Claim
        - name: pv-openlake-backend
          mountPath: /var/lib/postgresql/data
        - name: pv-postgresql-config-file
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
      volumes: #Step 2: Obtain it and name it as 'name'
      - name: pv-openlake-backend
        persistentVolumeClaim: #Step 1: Ask for a volume
          claimName: pvc-openlake-backend
      - name: pv-postgresql-config-file
        configMap:
          name: configmap-postgresql-config-file


